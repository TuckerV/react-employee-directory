{"version":3,"sources":["components/Wrapper.js","components/Header.js","utils/DataAreaContext.js","components/SearchName.js","components/Nav.js","components/DataBody.js","components/DataTable.js","utils/API.js","components/DataArea.js","components/Main.js","App.js","serviceWorker.js","index.js"],"names":["Wrapper","children","className","Header","DataAreaContext","React","createContext","SearchName","context","useContext","id","type","placeholder","aria-label","onChange","e","handleSearchChange","Nav","DataBody","undefined","developerState","filteredUsers","name","map","login","picture","phone","email","dob","key","uuid","data-th","src","medium","alt","first","last","href","target","date","dateArray","split","year","join","formatDate","DataTable","headings","width","style","onClick","handleSort","axios","get","DataArea","useState","users","order","setDeveloperState","useEffect","API","then","results","console","log","data","Provider","value","event","filter","filteredList","item","values","toLowerCase","indexOf","heading","currentOrder","elem","toString","sortedUsers","sort","a","b","localeCompare","age","updatedHeadings","length","Main","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.8436ef53.chunk.js","sourcesContent":["import React from 'react'\r\nimport \"../style/Wrapper.css\"\r\n\r\nexport default function Wrapper({children}) {\r\n    return (\r\n        <div className=\"wrapper\">\r\n            {children}\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport \"../style/Header.css\";\r\n\r\nexport default function Header() {\r\n    return (\r\n        <div>\r\n            <div className=\"header\">\r\n                <h1>Employee Directory</h1>\r\n                <p> Click on the column titles to sort by each</p>\r\n            </div>            \r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\";\r\n\r\nconst DataAreaContext = React.createContext({\r\n\r\n});\r\n\r\nexport default DataAreaContext;","  \r\nimport React, { useContext } from \"react\";\r\nimport DataAreaContext from \"../utils/DataAreaContext\";\r\nimport \"../style/SearchName.css\";\r\n\r\nconst SearchName = () => {\r\n  const context = useContext(DataAreaContext);\r\n\r\n  return (\r\n    <div className=\"searchbox wrap\">\r\n      <div className=\"input-group search\">\r\n          <div className=\"input-group-prepend\">\r\n            <span className=\"input-group-text\" id=\"\">\r\n             \r\n            </span>\r\n          </div>\r\n          <input\r\n          className=\"form-control searchTerm mr-sm-2\"\r\n          type=\"search\"\r\n          placeholder=\"Search a name\"\r\n          aria-label=\"Search\"\r\n          onChange={e => context.handleSearchChange(e)}/>\r\n        </div>\r\n    </div>\r\n  );\r\n}\r\nexport default SearchName;","import React from 'react';\r\nimport \"../style/Nav.css\"; \r\nimport SearchName from './SearchName';\r\n\r\nexport default function Nav() {\r\n    return (\r\n            <div>\r\n                <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n                    <div className=\"collapse navbar-collapse row\" id=\"navbarNav\">\r\n\r\n                        <div className=\"search-area\">\r\n                            <SearchName />\r\n                        </div>\r\n                    </div>\r\n                </nav>\r\n            </div>\r\n    )\r\n}\r\n","import React, { useContext } from \"react\";\r\nimport \"../style/DataBody.css\";\r\nimport DataAreaContext from \"../utils/DataAreaContext\";\r\n\r\nexport default function DataBody() {\r\n  const context = useContext(DataAreaContext);\r\n\r\n  function formatDate(date) {\r\n    const dateArray = date.split(\"-\");\r\n    const year = dateArray[0];\r\n    const month = dateArray[1];\r\n    const dayArray = dateArray[2].split(\"T\");\r\n    const day = dayArray[0];\r\n    const formattedDate = [month, day, year].join(\"-\");\r\n    return formattedDate;\r\n  }\r\n\r\n  return (\r\n    <tbody>\r\n      {context.developerState.filteredUsers[0] !== undefined && context.developerState.filteredUsers[0].name !== undefined ? (\r\n        context.developerState.filteredUsers.map(({ login, name, picture, phone, email, dob }) => {\r\n          return (\r\n            <tr key={login.uuid}>\r\n              <td data-th=\"Image\" className=\"align-middle\">\r\n                <img\r\n                  src={picture.medium}\r\n                  alt={\"profile image for \" + name.first + \" \" + name.last}\r\n                  className=\"img-responsive\"\r\n                />\r\n              </td>\r\n              <td data-th=\"Name\" className=\"name-cell align-middle\">\r\n                {name.first} {name.last}\r\n              </td>\r\n              <td data-th=\"Phone\" className=\"align-middle\">\r\n                {phone}\r\n              </td>\r\n              <td data-th=\"Email\" className=\"align-middle\">\r\n                <a href={\"mailto:\" + email} target=\"__blank\">\r\n                  {email}\r\n                </a>\r\n              </td>\r\n              <td data-th=\"DOB\" className=\"align-middle\">\r\n                {formatDate(dob.date)}\r\n              </td>\r\n            </tr>\r\n          );\r\n        })\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </tbody>\r\n  );\r\n};\r\n","import React, { useContext } from \"react\";\r\nimport DataBody from \"./DataBody\";\r\nimport \"../style/DataTable.css\";\r\nimport DataAreaContext from \"../utils/DataAreaContext\";\r\n\r\nconst DataTable = () => {\r\n  const context = useContext(DataAreaContext);\r\n\r\n  return (\r\n\r\n    <div className=\"datatable mt-5\">\r\n      <table id=\"table\" className=\"table table-striped table-hover table-condensed\">\r\n        <thead>\r\n          <tr>\r\n            {context.developerState.headings.map(({ name, width }) => {\r\n              return (\r\n                <th\r\n                  className=\"col\"\r\n                  key={name}\r\n                  style={{ width }}\r\n                  onClick={() => {\r\n                    context.handleSort(name);\r\n                  }}\r\n                >\r\n                  {name}\r\n                  <span className=\"pointer\"></span>\r\n                </th>\r\n              );\r\n            })}\r\n          </tr>\r\n        </thead>\r\n\r\n        <DataBody />\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DataTable;","import axios from \"axios\";\r\n\r\nexport default {\r\n  // Gets all users\r\n  getUsers: function() {\r\n\r\n    return axios.get(\"https://randomuser.me/api/?results=200&nat=us\");\r\n  \r\n}};","import React, {useEffect, useState} from 'react';\r\nimport Nav from './Nav';\r\nimport DataTable from './DataTable';\r\nimport '../style/DataArea.css';\r\nimport API from \"../utils/API\";\r\nimport DataAreaContext from \"../utils/DataAreaContext\";\r\n\r\nconst  DataArea = () => {\r\n    const [developerState, setDeveloperState] = useState({\r\n        users: [],\r\n        order: \"descend\",\r\n        filteredUsers: [],\r\n        headings: [\r\n          { name: \"Image\", width: \"10%\", order: \"descend\" },\r\n          { name: \"name\", width: \"10%\", order: \"descend\" },\r\n          { name: \"phone\", width: \"20%\", order: \"descend\" },\r\n          { name: \"email\", width: \"20%\", order: \"descend\" },\r\n          { name: \"dob\", width: \"10%\", order: \"descend\" }\r\n        ]\r\n      });\r\n\r\n    const handleSort = heading => {\r\n        let currentOrder = developerState.headings\r\n            .filter(elem => elem.name === heading)\r\n            .map(elem => elem.order)\r\n            .toString();\r\n        if (currentOrder === \"descend\") {\r\n            currentOrder = \"ascend\";\r\n        } else {\r\n            currentOrder = \"descend\";\r\n        }\r\n        const compareFnc = (a, b) => {\r\n            if (currentOrder === \"ascend\") {\r\n              if (a[heading] === undefined) {\r\n                return 1;\r\n              } else if (b[heading] === undefined) {\r\n                return -1;\r\n              }\r\n              else if (heading === \"name\") {\r\n                return a[heading].first.localeCompare(b[heading].first);\r\n              } else if (heading === \"dob\") {\r\n                return a[heading].age - b[heading].age;\r\n              } else {\r\n                return a[heading].localeCompare(b[heading]);\r\n              }\r\n            } else {\r\n              if (a[heading] === undefined) {\r\n                return 1;\r\n              } else if (b[heading] === undefined) {\r\n                return -1;\r\n              }\r\n              else if (heading === \"name\") {\r\n                return b[heading].first.localeCompare(a[heading].first);\r\n              }else if (heading === \"dob\") {\r\n                return b[heading].age - a[heading].age;\r\n              }  else {\r\n                return b[heading].localeCompare(a[heading]);\r\n              }\r\n            }\r\n          };\r\n          const sortedUsers = developerState.filteredUsers.sort(compareFnc);\r\n          const updatedHeadings = developerState.headings.map(elem => {\r\n            elem.order = elem.name === heading ? currentOrder : elem.order;\r\n            return elem;\r\n          });\r\n          setDeveloperState({\r\n            ...developerState,\r\n            filteredUsers: sortedUsers,\r\n            headings: updatedHeadings\r\n          });\r\n    };\r\n\r\n    const handleSearchChange = event => {\r\n          const filter = event.target.value;\r\n          const filteredList = developerState.users.filter(item => {\r\n            let values = item.name.first.toLowerCase() + \" \" + item.name.last.toLowerCase();\r\n            console.log(filter, values)\r\n          if(values.indexOf(filter.toLowerCase()) !== -1){\r\n            return item\r\n          };\r\n          });\r\n          setDeveloperState({ ...developerState, filteredUsers: filteredList });\r\n    };\r\n\r\n    useEffect(() => {\r\n        API.getUsers().then(results => {\r\n          console.log(results.data.results);\r\n          setDeveloperState({\r\n            ...developerState,\r\n            users: results.data.results,\r\n            filteredUsers: results.data.results\r\n          });\r\n        });\r\n      }, []);\r\n\r\n    return (\r\n        <DataAreaContext.Provider value={{ developerState, handleSearchChange, handleSort}}>\r\n            <div className=\"dataArea\">\r\n                <Nav />\r\n                {developerState.filteredUsers.length > 0 ? <DataTable /> : <div></div>}\r\n            </div>\r\n        </DataAreaContext.Provider>\r\n    );\r\n};\r\n\r\nexport default DataArea;","import React from 'react';\r\nimport DataArea from \"./DataArea\";\r\n\r\nexport default function Main() {\r\n    return (\r\n        <div>\r\n            <DataArea />\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\nimport './App.css';\nimport Wrapper from \"./components/Wrapper\"\nimport Header from \"./components/Header.js\"\nimport Main from \"./components/Main.js\"\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <Wrapper>\n        <Header/>\n        <Main />\n      </Wrapper>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}